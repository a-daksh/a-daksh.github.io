{"data":{"featured":{"edges":[{"node":{"frontmatter":{"title":"Bone.P.A.R.T.E","cover":{"publicURL":"/static/f67cc1be8e1f4e649d6a0b02c2bb44c1/image.gif","extension":"gif","childImageSharp":null},"tech":["C++","Python","ROS2","MoveIT","SAM"],"github":"https://github.com/KNEEpoleon","external":"https://mrsdprojects.ri.cmu.edu/2025teamd/"},"html":"<p>The project aims to address the limitations of Total Knee Arthroplasty by integrating AR  with robot assisted manipulation, enhancing surgical visualization and procedural accuracy. The system provides functionality to overlay a surgical plan on the patient’s anatomy using the Apple Vision Pro headset, while a KUKA LBR MED7 robotic arm executes surgical pin screwing tasks with sub-centimeter precision.</p>"}},{"node":{"frontmatter":{"title":"Unitree G1 Soccer Ball Kicking","cover":{"publicURL":"/static/11fb37403d42ec9b4a5d849cc834b104/image.gif","extension":"gif","childImageSharp":null},"tech":["Julia","IHLQR","TVLQR","QP","DIRCOL"],"github":"https://github.com/a-daksh/16745_Unitree_G1_Goal_Kicking","external":"https://drive.google.com/drive/folders/1bkAzpjAIa1z8fcTbUcF7YR9m2Zbwwave?usp=sharing"},"html":"<p>Built as part of the Optimal Control and Reinforcement Learning course at CMU, this project simulated a penalty-style soccer kick using the Unitree G1 humanoid. The system computed the required impulse to strike the ball toward a target, generated a feasible motion with direct collocation, and used infinite-horizon LQR for balancing along with time-varying LQR for trajectory tracking.</p>"}},{"node":{"frontmatter":{"title":"Stamp Pixel art using Franka arm","cover":{"publicURL":"/static/1b747de2fca979bde3fc915f83253697/image.gif","extension":"gif","childImageSharp":null},"tech":["ROS1","Python","FrankaPy"],"github":"https://github.com/a-daksh/pixel-art-franka","external":"https://drive.google.com/drive/folders/1fLW2rSwOEIGwB48E1Zd0QJzGh6RTqoWj?usp=sharing"},"html":"<p>Built as part of the Robot Autonomy course at CMU, this project used a Franka Emika Panda arm with a stamping mechanism to autonomously generate pixel art. The system converts images into grid patterns, optimizes stamping order with Christofides’ algorithm to minimize travel, and uses force-controlled stamping with ArUco tagged ink pads for adaptability.</p>"}},{"node":{"frontmatter":{"title":"Pluto Drone Control and Trajectory Planning","cover":{"publicURL":"/static/73d0df7af82fa466289d18f49f019205/image.gif","extension":"gif","childImageSharp":null},"tech":["Python","PIDControl","ArUco","MSP"],"github":"https://github.com/a-daksh/Pluto-Drone-Control","external":null},"html":"<p>Developed a Python-based control system for the Pluto Drone, featuring a low-latency MSP socket interface (~40 ms). Built a RealSense + ArUco tag localization pipeline with 95% accuracy and designed a vision-based PID controller that enabled stable trajectory following with ~7% overshoot.</p>"}}]}}}